WindowManager:
    LoginWindow:
        id: login_scr
    MainMenuWindow:

    CreateAccountWindow:
        id: create_account_scr
    
    TestInstructionsWindow:

    CameraWindow:
        id: camera_scr

    ResultsWindow:
        id: data_scr


    
<LoginWindow>:
    id: login_scr
    name: "login"
    #md_bg_color: [204/255, 153/255, 255/255,1]
    # MDCard:
    #     size_hint: None, None
    #     size: 450, 800
    #     pos_hint: {"center_x": .5, "center_y":.5}
    #     elevation: 15
    #     #md_bg_color: [229/255, 204/255, 255/255,1]
    #     padding: 25
    #     spacing: 25
    #     orientation: 'vertical'

    #adding items to the card
    FloatLayout:

        Image:
            source: 'PerioLogo.png'
            size_hint: None, None
            pos_hint: {"center_x": .5, "y":.55}
            size_hint: .5, .5

        MDTextField:
            id: email
            hint_text: "email"
            icon_right: "account"
            mode: "round"
            size_hint_x: None
            width: 200
            font_size: 30
            pos_hint: {'center_x': .5,'y': .5}
            size_hint: (.8,.1)
            #on_text_validate:  password.focus = True;

        MDLabel:
            id: blank
            text: "User and/or password required"
            pos_hint: {'x': .2,'y': .4}
            size_hint: (.8,.1)
            
        MDTextField:
            id: password
            hint_text: "password"
            icon_right: "eye-off"
            mode: "round"
            width: 200
            font_size: 30
            pos_hint: {'center_x': .5,'y': .3}
            size_hint: (.8,.1)
            password: True
            on_text_validate: app.check_password()
        MDLabel:
            id: error
            text: ""
            color: (0,1,0,1)
            pos_hint: {'x': .2,'y': .23}
            size_hint: (.8,.1)
        Button:
            text: "Log In"
            font_size: 40
            background_color: (0/255, 239/255, 255/255)
            pos_hint: {'center_x': .5,'y': .15}
            size_hint: (.8,.1)
            on_release: 
                app.login()
                

        Button:
            text: "Create An Account"
            font_size: 40
            background_color: (0/255, 239/255, 255/255)
            pos_hint: {'center_x': .5,'y': .05}
            size_hint: (.8,.1)
            on_release: 
                app.root.current= "create account"
                root.manager.transition.direction = "left"


<CreateAccountWindow>:
    id: create_account_scr
    name: "create account"
    FloatLayout:

        MDLabel:
            id: create_account_label 
            text:"Create An Account"
            font_size: 40
            halign: "center"
            size_hint_y: 0.08
            pos_hint: {'center_x': .5, 'y': .95}
            size_hint: (.8,.1)
            height: self.texture_size[1]
            

        MDTextField:
            id: first_name
            hint_text: "First Name"
            icon_right: "account"
            mode: "round"
            size_hint_x: None
            width: 200
            font_size: 30
            pos_hint: {'center_x': 0.5, 'y': 0.8}
            size_hint: (.8,.1)
            
        MDTextField:
            id: last_name
            hint_text: "Last Name"
            icon_right: "account"
            mode: "round"
            size_hint_x: None
            width: 200
            font_size: 30
            pos_hint: {'center_x': 0.5, 'y': 0.7}
            size_hint: (.8,.1)

        MDTextField:
            id: email
            hint_text: "Email"
            icon_right: "account"
            mode: "round"
            size_hint_x: None
            width: 200
            font_size: 30
            pos_hint: {'center_x': 0.5, 'y': 0.6}
            size_hint: (.8,.1)

        MDTextField:
            id: password
            hint_text: "Password"
            icon_right: "eye-off"
            mode: "round"
            width: 200
            font_size: 
            pos_hint: {'center_x': 0.5, 'y': 0.5}
            size_hint: (.8,.1)
            password: True

        MDTextField:
            id: password_verification
            hint_text: "Verify Password"
            icon_right: "eye-off"
            mode: "round"
            width: 200
            font_size: 30
            pos_hint: {'center_x': 0.5, 'y': 0.4}
            size_hint: (.8,.1)
            password: True

        MDFlatButton:
        Button:
            text: "Create Account"
            font_size: 40
            background_color: (0/255, 239/255, 255/255)
            pos_hint: {'center_x': 0.5, 'y': 0.15}
            size_hint: (.8,.1)
            on_release: 
                #app.email_exist()
                app.create_account()
                #app.root.current= "login"
                #root.manager.transition.direction = "left"

        Button:
            text: "Back"
            font_size: 40
            background_color: (0/255, 239/255, 255/255)
            pos_hint: {'center_x': 0.5, 'y': 0.05}
            size_hint: (.8,.1)
            on_release: 
                app.root.current= "login"
                root.manager.transition.direction = "left"

<MainMenuWindow>:
    name:"main menu"
    FloatLayout:

        Image:
            source: 'PerioLogo.png'
            size_hint: None, None
            pos_hint: {"center_x": .5, "y":.55}
            size_hint: .6, .6

        # MDLabel:
        #     id:"title_label"
        #     text:"Perio-Dx: Bad Teeth = Bad Kidneys + Bad Heart"
        #     font_size: 40
        #     bold: True
        #     halign: "center"
        #     size_hint_y: None
        #     height: self.texture_size[1]

        Button:
            id: "upload_test_button"
            text: "Upload Test"
            font_size: 16
            bold: True
            background_color: (0/255, 239/255, 255/255)
            pos_hint: {'center_x': .5,'y': .25}
            size_hint: (.8,.1)
            on_release: 
                app.root.current= "test instructions"
                root.manager.transition.direction = "left"

        Button:
            id: "view_results_button"
            text: "View Test Results"
            font_size: 16
            bold: True
            background_color: (0/255, 239/255, 255/255)
            pos_hint: {'center_x': .5,'y': .15}
            size_hint: (.8,.1) 
            on_release: 
                app.root.current= "results"
                root.manager.transition.direction = "left"
                app.add_datatable()

        Button:
            id: "log_out_button"
            text: "Log out"
            font_size: 16
            bold: True
            background_color: (0/255, 239/255, 255/255)
            pos_hint: {'center_x': .5,'y': .05}
            size_hint: (.8,.1) 
            on_release: 
                app.root.current= "login"
                root.manager.transition.direction = "right"
                

<TestInstructionsWindow>:
    name: "test instructions"
    FloatLayout:

        MDLabel:
            text:"Instructions for Test:" 
            bold: True
            font_size: 40
            halign: "center"
            pos_hint: {"center_x": .5, "y":.8}
            size_hint: .8, .2

        MDLabel:
            text:"To take a test, first enter a well-lit environment. Then line up the dots displayed on the camera with the lines on the test strip.  Press Save Image to capture the image and wait for results."
            bold: False
            font_size: 16
            halign: "center"
            pos_hint: {"center_x": .5, "y":.5} 
            size_hint: .8, .4

    Button:
        text: "Continue to Test"
        font_size: 16
        bold: True
        background_color: (0/255, 239/255, 255/255)
        pos_hint: {'center_x': .5,'y': .1}
        size_hint: (.8,.1) 
        on_release:
            app.root.current = "camera"
            root.manager.transition.direction = "left"
            # app.add_camera()

<CameraWindow>:
    name: "camera" 
    FloatLayout:
        background_color: (255, 255, 255)
        # AnchorLayout:
        #     id: camera_layout
        #     size_hint: (.95, 1)

        # MDFloatingActionButton:
        #     icon: "camera"
        #     pos_hint: {"center_x": .5, "y": .05}
        #     on_release: 
        #         app.root.current = 'results'
        #         app.color_analysis()
        #         app.add_datatable()

        # MDFloatingActionButton:
        #     icon: 'arrow-left'
        #     pos_hint: {'x': .1, 'y': .05}
        #     on_release: app.root.current = 'main menu'
       
       
        # canvas:
        #     Color:
        #         rgba: 0, 0, 1, 1
            
        #     Camera:
        #         id: camera
        #         resolution: (5375, 2419)
        #         pos_hint: {'center_x': .5,'center_y': .5}
        #         size_hint: (.9, .9)
        #         play: True

        #     Rectangle:
        #         size: (10,10)
        #         pos: self.pos

        Camera:
            id: camera
            resolution: (640, 480)
            pos_hint: {'center_x': .5,'center_y': .5}
            size_hint: (.9, .9)
            play: True

            #rotate camera to be landscape
            canvas.before:
                PushMatrix
                Rotate:
                    angle: -90
                    origin: self.center

            canvas.after:
                PopMatrix

        Image:
            source: 'blue-crosshair-target.png'
            pos_hint: {"center_x": .5, "center_y":.5}
            size_hint: .1, .1

        MDFloatingActionButton:
            icon: "camera"
            pos_hint: {"center_x": .5, "y": .05}
            on_release: 
                app.root.current = 'results'
                app.capture()
                #app.color_analysis()
                app.add_datatable()

        MDFloatingActionButton:
            icon: 'arrow-left'
            pos_hint: {'x': .1, 'y': .05}
            on_release: app.root.current = 'main menu'

                
<ResultsWindow>:
    name: "results"
    MDBoxLayout:
        orientation: 'vertical'
        padding: 10
        MDFloatingActionButton:
            icon: 'arrow-left'
            on_release: app.root.current = 'main menu'

        AnchorLayout:
            id: data_layout    